@model IEnumerable<Library.Models.BookModel>

@{
    ViewBag.Title = "Index";

    WebGrid grid = new WebGrid(null, rowsPerPage: 4);
    grid.Bind(Model, autoSortAndPage: true, rowCount: 4);
}


<h2>Books</h2>

<p>
    @Html.ActionLink("Add New Book", "Create")
</p>

@grid.GetHtml(tableStyle: "table table-bordered",
 mode: WebGridPagerModes.All,
 firstText: "<< First",
 previousText: "< Previous",
 nextText: "Next >",
 lastText: "Last >>",
    columns: grid.Columns(
    grid.Column("Title", "Title"),
    grid.Column("Quantity", "Quantity"),
    //grid.Column("Authors", format: (item) =>
    //{
    //    var subGrid = new WebGrid(null);// (item.Authors as AuthorModel).Groups);
    //    subGrid.Bind(item.Authors, autoSortAndPage: true);
    //    return subGrid.GetHtml(
    //        //tableStyle: "table table-bordered table-condensed",
    //        //htmlAttributes: new { id = "subGrid" },
    //        columns: subGrid.Columns(
    //            subGrid.Column("FullName", format: (groupString) => groupString, canSort: false)
    //        )
    //    );
    //}, canSort: false),
    //grid.Column(header: "Authors", format: (item) => Authors(item.Authors)),
    grid.Column(header: "Actions", format: (item) => new HtmlString(
        TakeBook(item.Id, item.Quantity).ToString() + " | " +
        @Html.ActionLink("History", "History", new { id = item.Id }).ToString() + " | " +
        @Html.ActionLink("Change quantity", "ChangeQuantity", new { id = item.Id }).ToString() + " | " +
        @Html.ActionLink("Delete", "Delete", new { id = item.Id }).ToString()
    ))
))


@*@helper Authors(List<dynamic> authors)
{
    if (authors != null)
    {
        foreach (var author in authors)
        {
            @Html.Label(" aa ")
        }
    }
}*@


@helper TakeBook(int id, int quantity)
{
    if (quantity > 0)
    {
        @Html.ActionLink("Take book", "Take", new { id = id });
    }
    else
    {
        @Html.Label("No book to take");
    }
}